{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "68df76d7_7b7b884f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsCheck.java",
        "patchSetId": 9
      },
      "lineNbr": 114,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-05-25T10:25:53Z",
      "side": 1,
      "message": "It looks like when no prefix is used in configuration (and thus, this collector is used rather than the SubcheckCollector), metrics are not published?\n\nAm I reading this wrong?\n\nI tried to find a test that would cover this case but I couldn\u0027t find any, should we have one?",
      "revId": "24baef4d880a73ebf920895d9dfa2d70d61cd233",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b81f64bf_2b7c9243",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsCheck.java",
        "patchSetId": 9
      },
      "lineNbr": 114,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-05-25T12:46:35Z",
      "side": 1,
      "message": "I have imagined that default check will just run without any extra metric - it will fall upon `blockedthreads` metric IOW it seemed to me wrong to introduce additional metric when all threads (without prefix are examined). Now in case of single or more prefixes are used `blockedthreads` will fail if any of prefixed checks fails but each one of them receives the dedicated metric `blockedthreads-(prefix.toLowerCase())` so that it is clear that `blockedthreads` was unhealthy due to given prefix being unhealthy.",
      "parentUuid": "68df76d7_7b7b884f",
      "revId": "24baef4d880a73ebf920895d9dfa2d70d61cd233",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d505fc58_c24b925c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsCheck.java",
        "patchSetId": 9
      },
      "lineNbr": 114,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-05-25T13:46:55Z",
      "side": 1,
      "message": "ok, that makes sense, thanks @Jacek ðŸ˜Š\nI think it would be useful to document somewhere that these \"extra\" metrics will be exposed, *as well as* the default one.",
      "parentUuid": "b81f64bf_2b7c9243",
      "revId": "24baef4d880a73ebf920895d9dfa2d70d61cd233",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "376704f7_56682ece",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsSubCheck.java",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-05-25T10:25:53Z",
      "side": 1,
      "message": "I am wondering why we need to have these two subclasses.\n\nWe could merge the two collect() logics to deal with the presence (or absence) of a prefix and increment total and block accordingly.\n\nCould we model collector as one class only?",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 72
      },
      "revId": "24baef4d880a73ebf920895d9dfa2d70d61cd233",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f0fd540_59fa26c5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsSubCheck.java",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-05-25T12:46:35Z",
      "side": 1,
      "message": "then we have \u0027if\u0027 called each time when the collect is performed - IMHO it is cleaner to have dedicated classes to do that and for sure faster ;)",
      "parentUuid": "376704f7_56682ece",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 72
      },
      "revId": "24baef4d880a73ebf920895d9dfa2d70d61cd233",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fa261bf_462d7b43",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsSubCheck.java",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-05-25T13:46:55Z",
      "side": 1,
      "message": "I guess it\u0027s arguable, for two reasons:\n- It\u0027s much less code (you will remove one class completely)\n- you could default \u0027prefix\u0027 to empty string, so that you don\u0027t need any extra check: threadName.startsWith(prefix) will always match.",
      "parentUuid": "2f0fd540_59fa26c5",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 72
      },
      "revId": "24baef4d880a73ebf920895d9dfa2d70d61cd233",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "871b29b5_31e10375",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsSubCheck.java",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-05-25T10:25:53Z",
      "side": 1,
      "message": "I was expecting each doCheck() execution to start from a fresh point in which no previous state is taken into consideration.\n\nIf we keep increasing `total` and `blocked` wouldn\u0027t we eventually end up in inconsistencies.\n\nOne example:\n\n\nTotal threads available: 10\n\n*Day1:*\nblocked: 0\ntotal: 10\n% blocked: 0 \u003d\u003e SUCCESS\n\n*Day 2:*\nblocked: 0\ntotal: 20\n% blocked: 0 \u003d\u003e SUCCESS\n\n...\n*Day 10:*\nblocked: 10\ntotal: 100\n% blocked: 10 \u003d\u003e SUCCESS (but it should be FAIL because really the number of blocked threads is 100% [since we have 10 threads available])\n\n\nWhat do you think?",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 23
      },
      "revId": "24baef4d880a73ebf920895d9dfa2d70d61cd233",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f2b1c8d_8e311051",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsSubCheck.java",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-05-25T12:46:35Z",
      "side": 1,
      "message": "nope, each time when `BlockedThreadsCheck.doCheck` is called (IOW when healthcheck endpoint is reached) fresh list of collectors is received (see [1]). Configuration of subchecks is created once but each one of them is a CollectorProvider and each time the `get()` is called (see [2] and [3]) new Collector implementation is returned.\n\n\n[1] https://gerrit-review.googlesource.com/c/plugins/healthcheck/+/304528/9/src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsCheck.java#65\n\n[2] https://gerrit-review.googlesource.com/c/plugins/healthcheck/+/304528/9/src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsConfigurator.java#64\n\n[3] https://gerrit-review.googlesource.com/c/plugins/healthcheck/+/304528/9/src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsSubCheck.java#79",
      "parentUuid": "871b29b5_31e10375",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 23
      },
      "revId": "24baef4d880a73ebf920895d9dfa2d70d61cd233",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a878dba_7a984ad7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/BlockedThreadsSubCheck.java",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-05-25T13:46:55Z",
      "side": 1,
      "message": "ok, makes sense.\nI thought that because the BlockedThreadsCheck is a Singleton, that list was computed only once.\n\nBut I understand a new set of collectors is supplied every time.\n\nThanks",
      "parentUuid": "1f2b1c8d_8e311051",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 23
      },
      "revId": "24baef4d880a73ebf920895d9dfa2d70d61cd233",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}