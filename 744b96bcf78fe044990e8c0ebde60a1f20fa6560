{
  "comments": [
    {
      "key": {
        "uuid": "90282b6d_5859b5ad",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-01-14T16:19:40Z",
      "side": 1,
      "message": "What release line this plugi is targeting? I guess \u003c 2.16? Can we provide NoteDb status for sites migrated to NoteDb?",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 51
      },
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81af6659_12d0821b",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-01-14T17:17:56Z",
      "side": 1,
      "message": "I\u0027d like to target every release starting from v2.14.\nNoteDb status would be really interesting indeed.",
      "parentUuid": "90282b6d_5859b5ad",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 51
      },
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06b77a17_46c18b50",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-01-15T08:03:34Z",
      "side": 1,
      "message": "Maybe encapsulate the results in a class similar to the consistency check result [1]?  The API could have a regular mode that returns true/false and a verbose mode that includes more details. If it is done like this it would be bette to do it from the initial commit rathe than rewriting it later.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/61730/5/gerrit-server/src/main/java/com/google/gerrit/server/change/CheckResult.java",
      "parentUuid": "81af6659_12d0821b",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 51
      },
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32ba266a_6a516779",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-01-15T08:46:25Z",
      "side": 1,
      "message": "\u003e Maybe encapsulate the results in a class similar to the consistency check result [1]?  The API could have a regular mode that returns true/false and a verbose mode that includes more details. If it is done like this it would be bette to do it from the initial commit rathe than rewriting it later.\n\u003e \n\u003e [1] https://gerrit-review.googlesource.com/c/gerrit/+/61730/5/gerrit-server/src/main/java/com/google/gerrit/server/change/CheckResult.java\n\nI have thought about it and have more details in the response has two issues:\n\n- Calculating a bigger payload takes more time, occupy more heap and CPU\n- Having more details and exposing them to a potentially malicious user isn\u0027t good at all\n\nThe purpose of this plugin is to provide a fast, effective and super-reliable API that can tell if Gerrit is healthy or not. This needs to work *always*, even when Gerrit is heavily constrained on resources.\n\nThe API should not require any authentication and is intended to be used by robots for querying constantly the status of Gerrit and, in case of any issues, report the problem and take automatic decisions.",
      "parentUuid": "06b77a17_46c18b50",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 51
      },
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f041a57d_8652ad60",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-01-15T11:42:04Z",
      "side": 1,
      "message": "@DavidP I\u0027ve encapsulated the check result in a JSON object. I won\u0027t include dynamic strings so that I can minimize the heap footprint of the check itself. Date/time as well are represented as integers.",
      "parentUuid": "32ba266a_6a516779",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 51
      },
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "affefac6_36d87e42",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-01-14T17:16:20Z",
      "side": 1,
      "message": "Perhaps would be useful to add a specific header to the response (X-Gerrit-Healthcheck), to make it easier for the clients to verify the response is coming from the healthcheck endpoint and not from any layer above that (fastly, HA, ELBs, etc).\nBut I understand might not be necessary at this point quite yet.",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d40781d_e62ed4a1",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-01-14T17:20:07Z",
      "side": 1,
      "message": "Oh yes, very good point indeed. If you are blocked in between, you won\u0027t get the header then. Follow-up change?",
      "parentUuid": "affefac6_36d87e42",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccd464d3_c6216499",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-01-14T19:35:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3d40781d_e62ed4a1",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c31988f_22375fb5",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-01-14T17:16:20Z",
      "side": 1,
      "message": "Why instead of a boolean don\u0027t we expose a string with the detail of the failure?\nthat would make it easier to investigate what\u0027s happening without needing to dig into the logs.\nIs it a security concern?",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deaa2a84_6801554b",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-01-14T17:20:07Z",
      "side": 1,
      "message": "We need to be careful about the risk of exposing internal data to a potential unknown entity. This plugin is more suited for checking if the system is up or down AND which part is up or down.\n\nThe details will be put into the error_log, so that ONLY a Gerrit admin can have access to it.",
      "parentUuid": "0c31988f_22375fb5",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a591856b_7a291fbd",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-01-14T19:35:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "deaa2a84_6801554b",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "550ae9b6_9fd6b2b8",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2019-01-15T07:31:13Z",
      "side": 1,
      "message": "We could have something more structured as this one for example https://github.com/beamly/SE4/blob/master/SE4.md#healthcheck\n\nWe could keep it in mind for a follow-up changeset, what do you think?",
      "parentUuid": "a591856b_7a291fbd",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2519bdd0_91184e55",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-01-15T08:46:25Z",
      "side": 1,
      "message": "\u003e We could have something more structured as this one for example https://github.com/beamly/SE4/blob/master/SE4.md#healthcheck\n\u003e \n\u003e We could keep it in mind for a follow-up changeset, what do you think?\n\nSee the answer above: exposing more details would be dangerous as you could expose information to a potentially malicious user.",
      "parentUuid": "550ae9b6_9fd6b2b8",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18fd4c82_9ba53747",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2019-01-15T10:15:39Z",
      "side": 1,
      "message": "Yep, fair enough. I was referring to the json structure (i.e.: having the tests in an array) and non-dangerous information like the timestamp of the report generation, duration of the tests. Something like:\n\n{\n    \"report_as_of\": \"2014-04-25T14:33:33.383Z\",\n    \"report_duration\": \"0 seconds\",\n    \"tests\": [\n        {\n            \"duration_millis\": 1.0,\n            \"test_name\": \"ReviewDB\",\n            \"test_result\": \"passed\",\n            \"tested_at\": \"2014-04-25T14:33:15.229Z\"\n        }\n    ]\n}\n\nAnyway, I believe it is ok as it is to start with.",
      "parentUuid": "2519bdd0_91184e55",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58db6f16_c3b1f859",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-01-15T11:02:05Z",
      "side": 1,
      "message": "Oh yes, that information is useful and harmless to expose, specifically the time to complete the check for each component would give an idea of the health status of it.",
      "parentUuid": "18fd4c82_9ba53747",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "388fea11_6d6e5d1a",
        "filename": "README.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-01-15T11:25:21Z",
      "side": 1,
      "message": "I don\u0027t like the JSON Array structure for tests for two reasons:\n\n- gives the idea that some tests can be missing, and that is fine.\n- makes super-hard to extract data automatically",
      "parentUuid": "58db6f16_c3b1f859",
      "revId": "744b96bcf78fe044990e8c0ebde60a1f20fa6560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}