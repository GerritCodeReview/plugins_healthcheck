{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "211f1167_6634c74b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/AbstractHealthCheck.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2025-03-27T10:09:15Z",
      "side": 1,
      "message": "When you are already at it: use `Stopwatch` instead, there are many examples in the Gerrit code base.",
      "revId": "f95e24a48f2bad60cfdc8cdd66bba0d6bed3c93b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47e1f6b1_a6dad4ab",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/healthcheck/check/AbstractHealthCheck.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2025-03-27T15:43:31Z",
      "side": 1,
      "message": "That can\u0027t be done without breaking API since StatusSummary reports both timestamp and elapsed time back to the caller of the API and StopWatch internally uses System.nanoTime() which doesn\u0027t provide absolute timestamps but can only measure elapsed time and which is not related to any notion of wall clock time.\n\nSee https://www.javaadvent.com/2019/12/measuring-time-from-java-to-kernel-and-back.html",
      "parentUuid": "211f1167_6634c74b",
      "revId": "f95e24a48f2bad60cfdc8cdd66bba0d6bed3c93b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}